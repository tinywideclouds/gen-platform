// Defines the *minimal* structure of the SecureEnvelope used for
// end-to-end encrypted messaging.
// This is the ONLY data the "dumb" router will see.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: src/types/secure/v1/envelope.proto

package secure_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the "sealed" data packet.
// All identifying metadata has been removed and placed *inside*
// the encrypted_data blob, per the "Sealed Sender" model.
type SecureEnvelopePb struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The URN of the message recipient. This is the *only* routing
	// information the router needs.
	RecipientId string `protobuf:"bytes,1,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	// The AES-encrypted payload. This blob now contains the senderId,
	// sentTimestamp, typeId, and the type-specific payloadBytes.
	EncryptedData []byte `protobuf:"bytes,2,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	// The RSA-encrypted AES symmetric key.
	EncryptedSymmetricKey []byte `protobuf:"bytes,3,opt,name=encrypted_symmetric_key,json=encryptedSymmetricKey,proto3" json:"encrypted_symmetric_key,omitempty"`
	// The signature of the encrypted_data, created with the
	// sender's *signing key*. This is mission-critical for the
	// recipient to verify the sender's authenticity.
	Signature     []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecureEnvelopePb) Reset() {
	*x = SecureEnvelopePb{}
	mi := &file_src_types_secure_v1_envelope_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecureEnvelopePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecureEnvelopePb) ProtoMessage() {}

func (x *SecureEnvelopePb) ProtoReflect() protoreflect.Message {
	mi := &file_src_types_secure_v1_envelope_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecureEnvelopePb.ProtoReflect.Descriptor instead.
func (*SecureEnvelopePb) Descriptor() ([]byte, []int) {
	return file_src_types_secure_v1_envelope_proto_rawDescGZIP(), []int{0}
}

func (x *SecureEnvelopePb) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *SecureEnvelopePb) GetEncryptedData() []byte {
	if x != nil {
		return x.EncryptedData
	}
	return nil
}

func (x *SecureEnvelopePb) GetEncryptedSymmetricKey() []byte {
	if x != nil {
		return x.EncryptedSymmetricKey
	}
	return nil
}

func (x *SecureEnvelopePb) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// A wrapper message for a list of secure envelopes.
// This is what the client will receive when it polls for messages.
type SecureEnvelopeListPb struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Envelopes     []*SecureEnvelopePb    `protobuf:"bytes,1,rep,name=envelopes,proto3" json:"envelopes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecureEnvelopeListPb) Reset() {
	*x = SecureEnvelopeListPb{}
	mi := &file_src_types_secure_v1_envelope_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecureEnvelopeListPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecureEnvelopeListPb) ProtoMessage() {}

func (x *SecureEnvelopeListPb) ProtoReflect() protoreflect.Message {
	mi := &file_src_types_secure_v1_envelope_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecureEnvelopeListPb.ProtoReflect.Descriptor instead.
func (*SecureEnvelopeListPb) Descriptor() ([]byte, []int) {
	return file_src_types_secure_v1_envelope_proto_rawDescGZIP(), []int{1}
}

func (x *SecureEnvelopeListPb) GetEnvelopes() []*SecureEnvelopePb {
	if x != nil {
		return x.Envelopes
	}
	return nil
}

var File_src_types_secure_v1_envelope_proto protoreflect.FileDescriptor

const file_src_types_secure_v1_envelope_proto_rawDesc = "" +
	"\n" +
	"\"src/types/secure/v1/envelope.proto\x12\x13src.types.secure.v1\"\xb2\x01\n" +
	"\x10SecureEnvelopePb\x12!\n" +
	"\frecipient_id\x18\x01 \x01(\tR\vrecipientId\x12%\n" +
	"\x0eencrypted_data\x18\x02 \x01(\fR\rencryptedData\x126\n" +
	"\x17encrypted_symmetric_key\x18\x03 \x01(\fR\x15encryptedSymmetricKey\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\fR\tsignature\"[\n" +
	"\x14SecureEnvelopeListPb\x12C\n" +
	"\tenvelopes\x18\x01 \x03(\v2%.src.types.secure.v1.SecureEnvelopePbR\tenvelopesBEZCgithub.com/tinywideclouds/gen-platform/go/types/secure/v1;secure_v1b\x06proto3"

var (
	file_src_types_secure_v1_envelope_proto_rawDescOnce sync.Once
	file_src_types_secure_v1_envelope_proto_rawDescData []byte
)

func file_src_types_secure_v1_envelope_proto_rawDescGZIP() []byte {
	file_src_types_secure_v1_envelope_proto_rawDescOnce.Do(func() {
		file_src_types_secure_v1_envelope_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_src_types_secure_v1_envelope_proto_rawDesc), len(file_src_types_secure_v1_envelope_proto_rawDesc)))
	})
	return file_src_types_secure_v1_envelope_proto_rawDescData
}

var file_src_types_secure_v1_envelope_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_src_types_secure_v1_envelope_proto_goTypes = []any{
	(*SecureEnvelopePb)(nil),     // 0: src.types.secure.v1.SecureEnvelopePb
	(*SecureEnvelopeListPb)(nil), // 1: src.types.secure.v1.SecureEnvelopeListPb
}
var file_src_types_secure_v1_envelope_proto_depIdxs = []int32{
	0, // 0: src.types.secure.v1.SecureEnvelopeListPb.envelopes:type_name -> src.types.secure.v1.SecureEnvelopePb
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_src_types_secure_v1_envelope_proto_init() }
func file_src_types_secure_v1_envelope_proto_init() {
	if File_src_types_secure_v1_envelope_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_src_types_secure_v1_envelope_proto_rawDesc), len(file_src_types_secure_v1_envelope_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_src_types_secure_v1_envelope_proto_goTypes,
		DependencyIndexes: file_src_types_secure_v1_envelope_proto_depIdxs,
		MessageInfos:      file_src_types_secure_v1_envelope_proto_msgTypes,
	}.Build()
	File_src_types_secure_v1_envelope_proto = out.File
	file_src_types_secure_v1_envelope_proto_goTypes = nil
	file_src_types_secure_v1_envelope_proto_depIdxs = nil
}
