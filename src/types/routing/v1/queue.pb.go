// File: types/routing/v1/queue.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: src/types/routing/v1/queue.proto

// The package name mirrors your directory structure.

package routing_v1

import (
	v1 "go/types/secure/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueuedMessagePb is the "Wrapper Message".
// It safely combines the router's internal queue ID with the
// dumb, untouched envelope.
type QueuedMessagePb struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The router-generated, internal-only queue ID (e.g., a UUID).
	// This is the handle the client will use for the ACK.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The original, unmodified, dumb "sealed" envelope.
	// We are importing this type from the 'secure' package.
	Envelope      *v1.SecureEnvelopePb `protobuf:"bytes,2,opt,name=envelope,proto3" json:"envelope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueuedMessagePb) Reset() {
	*x = QueuedMessagePb{}
	mi := &file_src_types_routing_v1_queue_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueuedMessagePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueuedMessagePb) ProtoMessage() {}

func (x *QueuedMessagePb) ProtoReflect() protoreflect.Message {
	mi := &file_src_types_routing_v1_queue_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueuedMessagePb.ProtoReflect.Descriptor instead.
func (*QueuedMessagePb) Descriptor() ([]byte, []int) {
	return file_src_types_routing_v1_queue_proto_rawDescGZIP(), []int{0}
}

func (x *QueuedMessagePb) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueuedMessagePb) GetEnvelope() *v1.SecureEnvelopePb {
	if x != nil {
		return x.Envelope
	}
	return nil
}

// QueuedMessageListPb is the payload returned by the 'GET /api/messages'
// endpoint. It's just a list of the wrapper messages.
type QueuedMessageListPb struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*QueuedMessagePb     `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueuedMessageListPb) Reset() {
	*x = QueuedMessageListPb{}
	mi := &file_src_types_routing_v1_queue_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueuedMessageListPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueuedMessageListPb) ProtoMessage() {}

func (x *QueuedMessageListPb) ProtoReflect() protoreflect.Message {
	mi := &file_src_types_routing_v1_queue_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueuedMessageListPb.ProtoReflect.Descriptor instead.
func (*QueuedMessageListPb) Descriptor() ([]byte, []int) {
	return file_src_types_routing_v1_queue_proto_rawDescGZIP(), []int{1}
}

func (x *QueuedMessageListPb) GetMessages() []*QueuedMessagePb {
	if x != nil {
		return x.Messages
	}
	return nil
}

var File_src_types_routing_v1_queue_proto protoreflect.FileDescriptor

const file_src_types_routing_v1_queue_proto_rawDesc = "" +
	"\n" +
	" src/types/routing/v1/queue.proto\x12\x14src.types.routing.v1\x1a\"src/types/secure/v1/envelope.proto\"d\n" +
	"\x0fQueuedMessagePb\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12A\n" +
	"\benvelope\x18\x02 \x01(\v2%.src.types.secure.v1.SecureEnvelopePbR\benvelope\"X\n" +
	"\x13QueuedMessageListPb\x12A\n" +
	"\bmessages\x18\x01 \x03(\v2%.src.types.routing.v1.QueuedMessagePbR\bmessagesB Z\x1ego/types/routing/v1;routing_v1b\x06proto3"

var (
	file_src_types_routing_v1_queue_proto_rawDescOnce sync.Once
	file_src_types_routing_v1_queue_proto_rawDescData []byte
)

func file_src_types_routing_v1_queue_proto_rawDescGZIP() []byte {
	file_src_types_routing_v1_queue_proto_rawDescOnce.Do(func() {
		file_src_types_routing_v1_queue_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_src_types_routing_v1_queue_proto_rawDesc), len(file_src_types_routing_v1_queue_proto_rawDesc)))
	})
	return file_src_types_routing_v1_queue_proto_rawDescData
}

var file_src_types_routing_v1_queue_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_src_types_routing_v1_queue_proto_goTypes = []any{
	(*QueuedMessagePb)(nil),     // 0: src.types.routing.v1.QueuedMessagePb
	(*QueuedMessageListPb)(nil), // 1: src.types.routing.v1.QueuedMessageListPb
	(*v1.SecureEnvelopePb)(nil), // 2: src.types.secure.v1.SecureEnvelopePb
}
var file_src_types_routing_v1_queue_proto_depIdxs = []int32{
	2, // 0: src.types.routing.v1.QueuedMessagePb.envelope:type_name -> src.types.secure.v1.SecureEnvelopePb
	0, // 1: src.types.routing.v1.QueuedMessageListPb.messages:type_name -> src.types.routing.v1.QueuedMessagePb
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_src_types_routing_v1_queue_proto_init() }
func file_src_types_routing_v1_queue_proto_init() {
	if File_src_types_routing_v1_queue_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_src_types_routing_v1_queue_proto_rawDesc), len(file_src_types_routing_v1_queue_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_src_types_routing_v1_queue_proto_goTypes,
		DependencyIndexes: file_src_types_routing_v1_queue_proto_depIdxs,
		MessageInfos:      file_src_types_routing_v1_queue_proto_msgTypes,
	}.Build()
	File_src_types_routing_v1_queue_proto = out.File
	file_src_types_routing_v1_queue_proto_goTypes = nil
	file_src_types_routing_v1_queue_proto_depIdxs = nil
}
